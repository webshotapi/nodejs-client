{
  "name": "@webshotapi/client",
  "version": "2.0.5",
  "description": "Take screenshot and save image in JPG, PNG, PDF. You can also extract selectors for all HTML elements with coordinates and css styles after browser rendering. Remove cookies popup before take screenshot",
  "main": "dist/index.js",
  "license": "MIT",
  "scripts": {
    "prepare": "npm run build",
    "build": "tsc",
    "test": "jest",
    "docs:gen": "typedoc src/index.ts",
    "dev:mock": "mockoon-cli start -d openapi/mockoon.json --pname openapi",
    "dev:mock:stop": "mockoon-cli stop",
    "start:dev": "tsc --watch",
    "release": "yarn publish --access public",
    "start:dev2": "nodemon --watch 'src/**' --ignore 'src/**/*.spec.ts' --exec 'tsc && node example/screenshot.js' ",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "generate_model": "docker run --rm -v $PWD/src/models:/local openapitools/openapi-generator-cli generate --global-property models -i /local/api-json.json -g typescript -o /local/"
  },
  "keywords": [
    "screenshot",
    "browser",
    "cookies",
    "popup",
    "remove",
    "ai",
    "capture",
    "website"
  ],
  "homepage": "https://webshotapi.com",
  "dependencies": {
    "axios": "^1.6.7",
    "rest-api-client-framework": "^1.0.7"
  },
  "files": [
    "dist"
  ],
  "devDependencies": {
    "@mockoon/cli": "^6.2.0",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.11.19",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "eslint": "^8.4.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.7.0",
    "jimp": "^0.22.10",
    "nodemon": "^3.0.3",
    "prettier": "^3.2.5",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.4.0",
    "ts-node-dev": "^2.0.0",
    "typedoc": "^0.25.8",
    "typescript": "^5.3.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "tests",
    "testRegex": ".*\\.test\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
